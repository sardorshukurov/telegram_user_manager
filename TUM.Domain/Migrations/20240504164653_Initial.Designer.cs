// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TUM.Domain.Context;

#nullable disable

namespace TUM.Domain.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240504164653_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BotUser", b =>
                {
                    b.Property<Guid>("AdminsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BotsId")
                        .HasColumnType("uuid");

                    b.HasKey("AdminsId", "BotsId");

                    b.HasIndex("BotsId");

                    b.ToTable("BotUser");
                });

            modelBuilder.Entity("TUM.Domain.Models.Bot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("TUM.Domain.Models.BotUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BotId")
                        .HasColumnType("uuid");

                    b.Property<bool>("HasPremium")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.HasKey("UserId", "BotId");

                    b.HasIndex("BotId");

                    b.ToTable("BotUsers");
                });

            modelBuilder.Entity("TUM.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BotUser", b =>
                {
                    b.HasOne("TUM.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("AdminsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUM.Domain.Models.Bot", null)
                        .WithMany()
                        .HasForeignKey("BotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TUM.Domain.Models.BotUser", b =>
                {
                    b.HasOne("TUM.Domain.Models.Bot", "Bot")
                        .WithMany("BotUsers")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TUM.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TUM.Domain.Models.Bot", b =>
                {
                    b.Navigation("BotUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
